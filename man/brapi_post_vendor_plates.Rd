% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/brapi_post_vendor_plates.R
\name{brapi_post_vendor_plates}
\alias{brapi_post_vendor_plates}
\title{post /vendor/plates}
\usage{
brapi_post_vendor_plates(
  con = NULL,
  clientId = "",
  numberOfSamples = 0,
  plates = "",
  sampleType = ""
)
}
\arguments{
\item{con}{list; required: TRUE; BrAPI connection object}

\item{clientId}{character; required: TRUE; A unique, alpha-numeric ID which identifies the client to the vendor. Used to connect the order to the contract, billing, and contact info.; default: "".}

\item{numberOfSamples}{integer; required: TRUE; The total number of samples contained in this request. Used for billing and basic validation of the request.; default: 0.}

\item{plates}{data.frame; required: TRUE, with default: ""; data.frame object of new plates to be submitted to a vendor. Each row in the data.frame describes one submitted plate. The \code{plates} argument data.frame requires to contain the following columns per submited plate:
\itemize{
\item \code{clientPlateBarcode} vector of type character; Optional value of the barcode attached to each submitted plate.
\item \code{clientPlateId} vector of type character; The Id which uniquely identifies each plate to the client making the request.
\item \code{sampleSubmissionFormat} vector of type character; Identifier for the plate formats of submitted plates, usually "PLATE_96" for a 96 well plate or "TUBES" for plateless format.
\item \code{samples} list of data.frame objects; Each data.frame in this list describes the samples on a submitted plate. Therefore, each row in one data.frame is describing one sample on a specific submitted plate. The data.frame containing the sample information per plate requires to contain the following columns:
\itemize{
\item \code{clientSampleBarCode} vector of type character; Optional value of the barcode attached to each sample on a plate.
\item \code{clientSampleId} vector of type character; The ID which uniquely identifies each sample on a plate to the client making the request.
\item \code{column} vector of type character; The Column identifier for each samples location in a plate.
\item \code{comments} vector of type character; Generic comments about each sample on a plate for the vendor.
\item \code{organismName} vector of type character; Scientific organism name for each sample on a plate.
\item \code{row} vector The Row identifier for each samples location in a plate.
\item \code{speciesName} vector of type character; Scientific species name for each sample on a plate.
\item \code{tissueType} vector of type character; The type of tissue in each sample on a plate. List of accepted tissue types can be found in the Vendor Specifiations.
\item \code{well} vector of type character; The Well identifier for each samples location in the plate. Usually a concatenation of \code{row} and \code{column} as specified above.
\item \code{concentration} data.frame; data.frame with the same number of rows as the number of samples on a plate and requires the following specified columns:
\itemize{
\item \code{units} vector of type character; concentration units per sample on a plate
\item \code{concentration} vector of type numeric; concentration values per sample on a plate
}
\item \code{taxonomyOntologyReference} data.frame; Taxonomy Ontology Reference details for each sample individually on a plate. The data.frame requires the following specified columns:
\itemize{
\item \code{ontologyID} vector of type character; Taxonomy Ontology Identifier per individual sample on a plate.
\item \code{ontologyPrefix} vector of type character; Taxonomy Ontology Prefix per sample on a plate.
\item \code{ontologyTerm} vector of type character; Taxonomy Ontology Term per sample on a plate.
}
\item \code{tissueTypeOntologyRefence} data.frame; Tissue Type Ontology Reference details for each sample individually on a plate. The data.frame requires the following columns to be  specified:
\itemize{
\item \code{ontologyID} vector of type character; Tissue Type Ontology Identifier per sample on a plate.
\item \code{ontologyPrefix} vector of type character; Tissue Type Ontology Prefix per sample on a plate.
\item \code{ontologyTerm} vector of type character; Tissue Type Ontology Term per sample on a plate.
}
\item \code{volume} data.frame; data.frame with the same number of rows as the number of samples on a plate and requires the following specified columns:
\itemize{
\item \code{units} vector of type character; volume units per sample on a plate.
\item \code{value} vector of type numeric; volume values per sample on a plate.
}
}
}

The Examples Section shows an example of how to construct the \code{plates} argument as a data.frame object.}

\item{sampleType}{character; required: TRUE; The type of Samples being submitted; default: "", possible values  "DNA" | "RNA" | "Tissue"}
}
\value{
data.frame containing the \code{submissionId}
}
\description{
Submit a new set of Sample data
}
\details{
Submit a new set of Sample data
}
\examples{
\dontrun{

# Create a connection object
con <- brapi_db()$testserver

# Create an example data.frame plates object containing two plates
# * one 96 well plate ("PLATE_96")
# * one plateless format ("TUBES")
plates = data.frame(
clientPlateBarcode = c("plateBarcode01", "plateBarcode02"),
clientPlateId = c("plateId01", "plateId02"),
sampleSubmissionFormat = c("PLATE_96", "TUBES"))

# Specify samples of PlateId01
samplesPlateId01 <- data.frame(
  clientSampleBarCode = c("sampleBarcode0101", "sampleBarcode0102"),
  clientSampleId = c("sampleId0101", "sampleId0102"),
  column = c("01", "12"),
  comments = c("commentS0101", "commentS0102"),
  organismName = c("oName0101", "oName0102"),
  row = c("A", "H"),
  speciesName = c("sName0101", "sName0102"),
  tissueType = c("tType0101", "tType0102"),
  well = c("A01", "H12"))
samplesPlateId01[["concentration"]] <- data.frame(
  units = c("cUnit0101", "cUnit0101"),
  concentration = c(0.0, 0.0))
samplesPlateId01[["taxonomyOntologyReference"]] <- data.frame(
  ontologyID = c("taxOnId0101", "taxOnRefId0102"),
  ontologyPrefix = c("taxOnPrefix0101", "taxOnPrefix0102"),
  ontologyTerm = c("taxOnTerm0101", "taxOnTerm0102"))
samplesPlateId01[["tissueTypeOntologyRefence"]] <- data.frame(
  ontologyID = c("tTypeOnId0101", "tTypeOnId0102"),
  ontologyPrefix = c("tTypeOnPrefix0101", "tTypeOnPrefix0102"),
  ontologyTerm = c("tTypeOnTerm0101", "tTypeOnTerm0102"))
samplesPlateId01[["volume"]] <- data.frame(
  units = c("vUnit0101", "vUnit0101"),
  value = c(0.00, 0.00))

# Specify samples of PlateId02
samplesPlateId02 <- data.frame(
  clientSampleBarCode = c("sampleBarcode0201", "sampleBarcode0202"),
  clientSampleId = c("sampleId0201", "sampleId0202"),
  column = c("01", "02"),
  comments = c("commentS0201", "commentS0202"),
  organismName = c("oName0201", "oName0202"),
  row = c("TUBE", "TUBE"),
  speciesName = c("sName0201", "sName0202"),
  tissueType = c("tType0201", "tType0202"),
  well = c("TUBE01", "TUBE02"))
samplesPlateId02[["concentration"]] <- data.frame(
  units = c("cUnit0201", "cUnit0201"),
  concentration = c(0, 0))
samplesPlateId02[["taxonomyOntologyReference"]] <- data.frame(
  ontologyID = c("taxOnId0201", "taxOnRefId0202"),
  ontologyPrefix = c("taxOnPrefix0201", "taxOnPrefix0202"),
  ontologyTerm = c("taxOnTerm0201", "taxOnTerm0202"))
samplesPlateId02[["tissueTypeOntologyRefence"]] <- data.frame(
  ontologyID = c("tTypeOnId0201", "tTypeOnId0202"),
  ontologyPrefix = c("tTypeOnPrefix0201", "tTypeOnPrefix0202"),
  ontologyTerm = c("tTypeOnTerm0201", "tTypeOnTerm0202"))
samplesPlateId02[["volume"]] <- data.frame(
  units = c("vUnit0201", "vUnit0201"),
  value = c(0, 0))

# Add samples infomation to the plates object
plates[["samples"]] <- list(samplesPlateId01, samplesPlateId02)

# Make post /vendor/plates call
brapi_post_vendor_plates(con = con,
                         clientId = "BrAPIR",
                         numberOfSamples = 4,
                         plates = plates,
                         sampleType = "DNA")
}

}
\references{
\href{https://app.swaggerhub.com/apis/PlantBreedingAPI/BrAPI/1.3#/Vendor/post_vendor_plates }{BrAPI SwaggerHub}
}
\seealso{
Other brapi_1.3: 
\code{\link{brapi_get_allelematrices_search}()},
\code{\link{brapi_get_allelematrices}()},
\code{\link{brapi_get_attributes_categories}()},
\code{\link{brapi_get_attributes}()},
\code{\link{brapi_get_breedingmethods_breedingMethodDbId}()},
\code{\link{brapi_get_breedingmethods}()},
\code{\link{brapi_get_calls}()},
\code{\link{brapi_get_commoncropnames}()},
\code{\link{brapi_get_germplasm_germplasmDbId_attributes}()},
\code{\link{brapi_get_germplasm_germplasmDbId_markerprofiles}()},
\code{\link{brapi_get_germplasm_germplasmDbId_mcpd}()},
\code{\link{brapi_get_germplasm_germplasmDbId_pedigree}()},
\code{\link{brapi_get_germplasm_germplasmDbId_progeny}()},
\code{\link{brapi_get_germplasm_germplasmDbId}()},
\code{\link{brapi_get_germplasm}()},
\code{\link{brapi_get_images_imageDbId}()},
\code{\link{brapi_get_images}()},
\code{\link{brapi_get_lists_listDbId}()},
\code{\link{brapi_get_lists}()},
\code{\link{brapi_get_locations_locationDbId}()},
\code{\link{brapi_get_locations}()},
\code{\link{brapi_get_maps_mapDbId_positions_linkageGroupName}()},
\code{\link{brapi_get_maps_mapDbId_positions}()},
\code{\link{brapi_get_maps_mapDbId}()},
\code{\link{brapi_get_maps}()},
\code{\link{brapi_get_markerprofiles_markerProfileDbId}()},
\code{\link{brapi_get_markerprofiles}()},
\code{\link{brapi_get_markers_markerDbId}()},
\code{\link{brapi_get_markers}()},
\code{\link{brapi_get_methods_methodDbId}()},
\code{\link{brapi_get_methods}()},
\code{\link{brapi_get_observationlevels}()},
\code{\link{brapi_get_observationunits}()},
\code{\link{brapi_get_ontologies}()},
\code{\link{brapi_get_people_personDbId}()},
\code{\link{brapi_get_people}()},
\code{\link{brapi_get_programs}()},
\code{\link{brapi_get_samples_sampleDbId}()},
\code{\link{brapi_get_samples}()},
\code{\link{brapi_get_scales_scaleDbId}()},
\code{\link{brapi_get_scales}()},
\code{\link{brapi_get_search_germplasm_searchResultsDbId}()},
\code{\link{brapi_get_search_images_searchResultsDbId}()},
\code{\link{brapi_get_search_markers_searchResultsDbId}()},
\code{\link{brapi_get_search_observationtables_searchResultsDbId}()},
\code{\link{brapi_get_search_observationunits_searchResultsDbId}()},
\code{\link{brapi_get_search_programs_searchResultsDbId}()},
\code{\link{brapi_get_search_samples_searchResultsDbId}()},
\code{\link{brapi_get_search_studies_searchResultsDbId}()},
\code{\link{brapi_get_search_variables_searchResultsDbId}()},
\code{\link{brapi_get_seasons}()},
\code{\link{brapi_get_studies_studyDbId_germplasm}()},
\code{\link{brapi_get_studies_studyDbId_layouts}()},
\code{\link{brapi_get_studies_studyDbId_observations}()},
\code{\link{brapi_get_studies_studyDbId_observationunits}()},
\code{\link{brapi_get_studies_studyDbId_observationvariables}()},
\code{\link{brapi_get_studies_studyDbId_table}()},
\code{\link{brapi_get_studies_studyDbId}()},
\code{\link{brapi_get_studies}()},
\code{\link{brapi_get_studytypes}()},
\code{\link{brapi_get_traits_traitDbId}()},
\code{\link{brapi_get_traits}()},
\code{\link{brapi_get_trials_trialDbId}()},
\code{\link{brapi_get_trials}()},
\code{\link{brapi_get_variables_observationVariableDbId}()},
\code{\link{brapi_get_variables}()},
\code{\link{brapi_get_vendor_orders_orderId_plates}()},
\code{\link{brapi_get_vendor_orders_orderId_results}()},
\code{\link{brapi_get_vendor_orders_orderId_status}()},
\code{\link{brapi_get_vendor_orders}()},
\code{\link{brapi_get_vendor_plates_submissionId}()},
\code{\link{brapi_get_vendor_specifications}()},
\code{\link{brapi_post_allelematrices_search}()},
\code{\link{brapi_post_images}()},
\code{\link{brapi_post_lists_listDbId_items}()},
\code{\link{brapi_post_lists}()},
\code{\link{brapi_post_methods}()},
\code{\link{brapi_post_people}()},
\code{\link{brapi_post_phenotypes}()},
\code{\link{brapi_post_scales}()},
\code{\link{brapi_post_search_germplasm}()},
\code{\link{brapi_post_search_images}()},
\code{\link{brapi_post_search_markers}()},
\code{\link{brapi_post_search_observationtables}()},
\code{\link{brapi_post_search_observationunits}()},
\code{\link{brapi_post_search_programs}()},
\code{\link{brapi_post_search_samples}()},
\code{\link{brapi_post_search_studies}()},
\code{\link{brapi_post_search_variables}()},
\code{\link{brapi_post_studies_studyDbId_table}()},
\code{\link{brapi_post_traits}()},
\code{\link{brapi_post_vendor_orders}()}

Other Vendor: 
\code{\link{brapi_get_vendor_orders_orderId_plates}()},
\code{\link{brapi_get_vendor_orders_orderId_results}()},
\code{\link{brapi_get_vendor_orders_orderId_status}()},
\code{\link{brapi_get_vendor_orders}()},
\code{\link{brapi_get_vendor_plates_submissionId}()},
\code{\link{brapi_get_vendor_specifications}()},
\code{\link{brapi_post_vendor_orders}()}
}
\author{
brapir generator package
}
\concept{Vendor}
\concept{brapi_1.3}
