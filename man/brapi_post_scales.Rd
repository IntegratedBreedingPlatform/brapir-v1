% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/brapi_post_scales.R
\name{brapi_post_scales}
\alias{brapi_post_scales}
\title{post /scales}
\usage{
brapi_post_scales(
  con = NULL,
  dataType = "",
  decimalPlaces = 0,
  ontologyReference = list(),
  scaleName = "",
  validValues = list(),
  xref = ""
)
}
\arguments{
\item{con}{list; required: TRUE; BrAPI connection object}

\item{dataType}{character; required: FALSE; Class of the scale, entries can be:
\itemize{
\item "Code" - This scale class is exceptionally used to express complex traits. Code is a nominal scale that combines the expressions of the different traits composing the complex trait. For exemple a severity trait might be expressed by a 2 digit and 2 character code. The first 2 digits are the percentage of the plant covered by a fungus and the 2 characters refer to the delay in development, e.g. "75VD" means "75\%" of the plant is  Crop Ontology & Integrated Breeding Platform | Curation Guidelines | 5/6/2016 9 infected and the plant is very delayed.
\item "Date" - The date class is for events expressed in a time format, e.g. yyyymmddThh:mm:ssZ or dd/mm/yy
\item "Duration" - The Duration class is for time elapsed between two events expressed in a time format, e.g. days, hours, months
\item "Nominal" - Categorical scale that can take one of a limited and fixed number of categories. There is no intrinsic ordering to the categories
\item "Numerical" - Numerical scales express the trait with real numbers. The numerical scale defines the unit e.g. centimeter, ton per hectar, branches
\item "Ordinal" - Ordinal scales are scales composed of ordered categories
\item "Text" - A free text is used to express the trait.
}

; default: "".}

\item{decimalPlaces}{integer; required: FALSE; For numerical, number of decimal places to be reported; default: 0.}

\item{ontologyReference}{list; required: FALSE; The ontologyReference list should contain links to various ontology documentation (URL and type) supplied as a dataframe, an unique ontology database identifier, an ontology name and an ontology version (no specific format). In the Examples section an example on how to specify this list is provided; default: list()}

\item{scaleName}{character; required: FALSE; Name of the scale; default: "".}

\item{validValues}{list; required: FALSE; The validValues list should contain a character vector of values when specificing a nominal or ordinal scale, in this case max and min will be specified as 0. When specifying a numerical or date scale the categories need to specified as "", max specifies the maximum value and min specifies the minimum value used for data capture control. In the Examples section an example on how to specify this list is provided; default: list()}

\item{xref}{character; required: FALSE; Cross reference to the scale, for example to a unit ontology such as UO or to a unit of an external major database; default: "".}
}
\value{
data.frame
}
\description{
Add a new Scale
}
\details{
Create a new scale object in the database
}
\examples{
\dontrun{

# Create a connection object
con <- brapi_db()$testserver

# Create an ontologyReference example list object
# ontologyDbId should be specified as an existing one (see get /ontologies) or
# left empty (some servers might generate a new ontologyDbId).
ontologyReference <- list(
  documentationLinks = data.frame(URL = "https://Ontology.org/s5",
                                  type = "RDF"),
  ontologyDbId = "MO_123",
  ontologyName = "Ontology.org",
  version = "17")

# Create an validValues example list object
# If categories is used max and min have to be 0, vice versa when specifying
# max and min for a numerical or date scale the categories should specified
# as "".
validValues <- list(
  categories = c("xs", "s", "m", "l", "xl", "xxl"),
  max = 0,
  min = 0)

# Make post /scales call
brapi_post_scales(con = con,
                  dataType = "Ordinal",
                  decimalPlaces = 0,
                  ontologyReference = ontologyReference,
                  scaleName = 'clothing sizes',
                  validValues = validValues,
                  xref = "xref")
}

}
\references{
\href{https://app.swaggerhub.com/apis/PlantBreedingAPI/BrAPI/1.3#/Observation\%20Variables/post_scales }{BrAPI SwaggerHub}
}
\seealso{
Other brapi_1.3: 
\code{\link{brapi_get_allelematrices_search}()},
\code{\link{brapi_get_allelematrices}()},
\code{\link{brapi_get_attributes_categories}()},
\code{\link{brapi_get_attributes}()},
\code{\link{brapi_get_breedingmethods_breedingMethodDbId}()},
\code{\link{brapi_get_breedingmethods}()},
\code{\link{brapi_get_calls}()},
\code{\link{brapi_get_commoncropnames}()},
\code{\link{brapi_get_germplasm_germplasmDbId_attributes}()},
\code{\link{brapi_get_germplasm_germplasmDbId_markerprofiles}()},
\code{\link{brapi_get_germplasm_germplasmDbId_mcpd}()},
\code{\link{brapi_get_germplasm_germplasmDbId_pedigree}()},
\code{\link{brapi_get_germplasm_germplasmDbId_progeny}()},
\code{\link{brapi_get_germplasm_germplasmDbId}()},
\code{\link{brapi_get_germplasm}()},
\code{\link{brapi_get_images_imageDbId}()},
\code{\link{brapi_get_images}()},
\code{\link{brapi_get_lists_listDbId}()},
\code{\link{brapi_get_lists}()},
\code{\link{brapi_get_locations_locationDbId}()},
\code{\link{brapi_get_locations}()},
\code{\link{brapi_get_maps_mapDbId_positions_linkageGroupName}()},
\code{\link{brapi_get_maps_mapDbId_positions}()},
\code{\link{brapi_get_maps_mapDbId}()},
\code{\link{brapi_get_maps}()},
\code{\link{brapi_get_markerprofiles_markerProfileDbId}()},
\code{\link{brapi_get_markerprofiles}()},
\code{\link{brapi_get_markers_markerDbId}()},
\code{\link{brapi_get_markers}()},
\code{\link{brapi_get_methods_methodDbId}()},
\code{\link{brapi_get_methods}()},
\code{\link{brapi_get_observationlevels}()},
\code{\link{brapi_get_observationunits}()},
\code{\link{brapi_get_ontologies}()},
\code{\link{brapi_get_people_personDbId}()},
\code{\link{brapi_get_people}()},
\code{\link{brapi_get_programs}()},
\code{\link{brapi_get_samples_sampleDbId}()},
\code{\link{brapi_get_samples}()},
\code{\link{brapi_get_scales_scaleDbId}()},
\code{\link{brapi_get_scales}()},
\code{\link{brapi_get_search_germplasm_searchResultsDbId}()},
\code{\link{brapi_get_search_images_searchResultsDbId}()},
\code{\link{brapi_get_search_markers_searchResultsDbId}()},
\code{\link{brapi_get_search_observationtables_searchResultsDbId}()},
\code{\link{brapi_get_search_observationunits_searchResultsDbId}()},
\code{\link{brapi_get_search_programs_searchResultsDbId}()},
\code{\link{brapi_get_search_samples_searchResultsDbId}()},
\code{\link{brapi_get_search_studies_searchResultsDbId}()},
\code{\link{brapi_get_search_variables_searchResultsDbId}()},
\code{\link{brapi_get_seasons}()},
\code{\link{brapi_get_studies_studyDbId_germplasm}()},
\code{\link{brapi_get_studies_studyDbId_layouts}()},
\code{\link{brapi_get_studies_studyDbId_observations}()},
\code{\link{brapi_get_studies_studyDbId_observationunits}()},
\code{\link{brapi_get_studies_studyDbId_observationvariables}()},
\code{\link{brapi_get_studies_studyDbId_table}()},
\code{\link{brapi_get_studies_studyDbId}()},
\code{\link{brapi_get_studies}()},
\code{\link{brapi_get_studytypes}()},
\code{\link{brapi_get_traits_traitDbId}()},
\code{\link{brapi_get_traits}()},
\code{\link{brapi_get_trials_trialDbId}()},
\code{\link{brapi_get_trials}()},
\code{\link{brapi_get_variables_observationVariableDbId}()},
\code{\link{brapi_get_variables}()},
\code{\link{brapi_get_vendor_orders_orderId_plates}()},
\code{\link{brapi_get_vendor_orders_orderId_results}()},
\code{\link{brapi_get_vendor_orders_orderId_status}()},
\code{\link{brapi_get_vendor_orders}()},
\code{\link{brapi_get_vendor_plates_submissionId}()},
\code{\link{brapi_get_vendor_specifications}()},
\code{\link{brapi_post_allelematrices_search}()},
\code{\link{brapi_post_images}()},
\code{\link{brapi_post_lists_listDbId_items}()},
\code{\link{brapi_post_lists}()},
\code{\link{brapi_post_methods}()},
\code{\link{brapi_post_people}()},
\code{\link{brapi_post_phenotypes}()},
\code{\link{brapi_post_search_germplasm}()},
\code{\link{brapi_post_search_images}()},
\code{\link{brapi_post_search_markers}()},
\code{\link{brapi_post_search_observationtables}()},
\code{\link{brapi_post_search_observationunits}()},
\code{\link{brapi_post_search_programs}()},
\code{\link{brapi_post_search_samples}()},
\code{\link{brapi_post_search_studies}()},
\code{\link{brapi_post_search_variables}()},
\code{\link{brapi_post_studies_studyDbId_table}()},
\code{\link{brapi_post_traits}()},
\code{\link{brapi_post_vendor_orders}()},
\code{\link{brapi_post_vendor_plates}()},
\code{\link{brapi_put_images_imageDbId_imagecontent}()},
\code{\link{brapi_put_images_imageDbId}()},
\code{\link{brapi_put_lists_listDbId}()},
\code{\link{brapi_put_methods_methodDbId}()}

Other Observation Variables: 
\code{\link{brapi_get_methods_methodDbId}()},
\code{\link{brapi_get_methods}()},
\code{\link{brapi_get_ontologies}()},
\code{\link{brapi_get_scales_scaleDbId}()},
\code{\link{brapi_get_scales}()},
\code{\link{brapi_get_search_variables_searchResultsDbId}()},
\code{\link{brapi_get_studies_studyDbId_observationvariables}()},
\code{\link{brapi_get_traits_traitDbId}()},
\code{\link{brapi_get_traits}()},
\code{\link{brapi_get_variables_observationVariableDbId}()},
\code{\link{brapi_get_variables}()},
\code{\link{brapi_post_methods}()},
\code{\link{brapi_post_search_variables}()},
\code{\link{brapi_post_traits}()},
\code{\link{brapi_put_methods_methodDbId}()}
}
\author{
brapir generator package
}
\concept{Observation Variables}
\concept{brapi_1.3}
