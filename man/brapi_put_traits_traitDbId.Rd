% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/brapi_put_traits_traitDbId.R
\name{brapi_put_traits_traitDbId}
\alias{brapi_put_traits_traitDbId}
\title{put /traits/\{traitDbId\}}
\usage{
brapi_put_traits_traitDbId(
  con = NULL,
  traitDbId = "",
  alternativeAbbreviations = "",
  attribute = "",
  class = "",
  description = "",
  entity = "",
  mainAbbreviation = "",
  ontologyReference = list(),
  status = "",
  synonyms = "",
  traitName = "",
  xref = ""
)
}
\arguments{
\item{con}{list; required: TRUE; BrAPI connection object}

\item{traitDbId}{character; required: TRUE; the internal database identifier of the trait to be updated; default: ""}

\item{alternativeAbbreviations}{vector of type character; required: FALSE; Other frequent abbreviations of the trait, if any. These abbreviations do not have to follow a convention; default: "", when using multiple values supply as c("value1", "value2").}

\item{attribute}{character; required: FALSE; A trait can be decomposed as "Trait" = "Entity" + "Attribute", the attribute is the observed feature (or characteristic) of the entity e.g., for "grain colour", attribute = "colour"; default: "".}

\item{class}{character; required: FALSE; Trait class. (examples: "morphological trait", "phenological trait", "agronomical trait", "physiological trait", "abiotic stress trait", "biotic stress trait", "biochemical trait", "quality traits trait", "fertility trait", etc.); default: "".}

\item{description}{character; required: FALSE; The description of a trait; default: "".}

\item{entity}{character; required: FALSE; A trait can be decomposed as "Trait" = "Entity" + "Attribute", the entity is the part of the plant that the trait refers to e.g., for "grain colour", entity = "grain"; default: "".}

\item{mainAbbreviation}{character; required: FALSE; Main abbreviation for trait name. (examples: "Carotenoid content" => "CC"); default: "".}

\item{ontologyReference}{list; required: FALSE; The ontologyReference list should contain links to various ontology documentation (URL and type) supplied as a dataframe, an unique ontology database identifier, an ontology name and an ontology version (no specific format). In the Examples section an example on how to specify this list is provided; default: list()}

\item{status}{character; required: FALSE; Trait status (examples: "recommended", "obsolete", "legacy", etc.); default: "".}

\item{synonyms}{vector of type character; required: FALSE; Other trait names; default: "", when using multiple values supply as c("value1", "value2").}

\item{traitName}{character; required: FALSE; The human readable name of a trait; default: "".}

\item{xref}{character; required: FALSE; Cross reference of the trait to an external ontology or database term e.g., Xref to a trait ontology (TO) term; default: "".}
}
\value{
data.frame
}
\description{
Update an existing Trait
}
\details{
Update an existing trait
}
\examples{
\dontrun{

# Create a connection object
con <- brapi_db()$testserver

# Create an ontologyReference example list object for the traitDbId to be updated
# ontologyDbId should be specified as an existing one (see get /ontologies) or
# left empty (some servers might generate a new ontologyDbId).
ontologyReference <- list(
  documentationLinks = data.frame(URL = "https://Ontology.org/s6",
                                  type = "RDF"),
  ontologyDbId = "MO_123",
  ontologyName = "Ontology.org",
  version = "17")

# Make post /traits call
brapi_put_traits_traitDbId(con = con,
                           traitDbIb = "", # retrieve from brapi_get_traits()
                           alternativeAbbreviations = c("clothSizes", "sizesCloth"),
                           attribute = "size",
                           class = "physiological trait",
                           description = "Size designation of clothes",
                           entity = "clothing",
                           mainAbbreviation = "CS",
                           ontologyReference = ontologyReference,
                           status = "legacy",
                           synonyms = c("sizeClothing", "cSizes"),
                           traitName = "clothingSize",
                           xref = "xref")
}

}
\references{
\href{https://app.swaggerhub.com/apis/PlantBreedingAPI/BrAPI/1.3#/Observation\%20Variables/put_traits__traitDbId_ }{BrAPI SwaggerHub}
}
\seealso{
Other brapi_1.3: 
\code{\link{brapi_get_allelematrices_search}()},
\code{\link{brapi_get_allelematrices}()},
\code{\link{brapi_get_attributes_categories}()},
\code{\link{brapi_get_attributes}()},
\code{\link{brapi_get_breedingmethods_breedingMethodDbId}()},
\code{\link{brapi_get_breedingmethods}()},
\code{\link{brapi_get_calls}()},
\code{\link{brapi_get_commoncropnames}()},
\code{\link{brapi_get_germplasm_germplasmDbId_attributes}()},
\code{\link{brapi_get_germplasm_germplasmDbId_markerprofiles}()},
\code{\link{brapi_get_germplasm_germplasmDbId_mcpd}()},
\code{\link{brapi_get_germplasm_germplasmDbId_pedigree}()},
\code{\link{brapi_get_germplasm_germplasmDbId_progeny}()},
\code{\link{brapi_get_germplasm_germplasmDbId}()},
\code{\link{brapi_get_germplasm}()},
\code{\link{brapi_get_images_imageDbId}()},
\code{\link{brapi_get_images}()},
\code{\link{brapi_get_lists_listDbId}()},
\code{\link{brapi_get_lists}()},
\code{\link{brapi_get_locations_locationDbId}()},
\code{\link{brapi_get_locations}()},
\code{\link{brapi_get_maps_mapDbId_positions_linkageGroupName}()},
\code{\link{brapi_get_maps_mapDbId_positions}()},
\code{\link{brapi_get_maps_mapDbId}()},
\code{\link{brapi_get_maps}()},
\code{\link{brapi_get_markerprofiles_markerProfileDbId}()},
\code{\link{brapi_get_markerprofiles}()},
\code{\link{brapi_get_markers_markerDbId}()},
\code{\link{brapi_get_markers}()},
\code{\link{brapi_get_methods_methodDbId}()},
\code{\link{brapi_get_methods}()},
\code{\link{brapi_get_observationlevels}()},
\code{\link{brapi_get_observationunits}()},
\code{\link{brapi_get_ontologies}()},
\code{\link{brapi_get_people_personDbId}()},
\code{\link{brapi_get_people}()},
\code{\link{brapi_get_programs}()},
\code{\link{brapi_get_samples_sampleDbId}()},
\code{\link{brapi_get_samples}()},
\code{\link{brapi_get_scales_scaleDbId}()},
\code{\link{brapi_get_scales}()},
\code{\link{brapi_get_search_germplasm_searchResultsDbId}()},
\code{\link{brapi_get_search_images_searchResultsDbId}()},
\code{\link{brapi_get_search_markers_searchResultsDbId}()},
\code{\link{brapi_get_search_observationtables_searchResultsDbId}()},
\code{\link{brapi_get_search_observationunits_searchResultsDbId}()},
\code{\link{brapi_get_search_programs_searchResultsDbId}()},
\code{\link{brapi_get_search_samples_searchResultsDbId}()},
\code{\link{brapi_get_search_studies_searchResultsDbId}()},
\code{\link{brapi_get_search_variables_searchResultsDbId}()},
\code{\link{brapi_get_seasons}()},
\code{\link{brapi_get_studies_studyDbId_germplasm}()},
\code{\link{brapi_get_studies_studyDbId_layouts}()},
\code{\link{brapi_get_studies_studyDbId_observations}()},
\code{\link{brapi_get_studies_studyDbId_observationunits}()},
\code{\link{brapi_get_studies_studyDbId_observationvariables}()},
\code{\link{brapi_get_studies_studyDbId_table}()},
\code{\link{brapi_get_studies_studyDbId}()},
\code{\link{brapi_get_studies}()},
\code{\link{brapi_get_studytypes}()},
\code{\link{brapi_get_traits_traitDbId}()},
\code{\link{brapi_get_traits}()},
\code{\link{brapi_get_trials_trialDbId}()},
\code{\link{brapi_get_trials}()},
\code{\link{brapi_get_variables_observationVariableDbId}()},
\code{\link{brapi_get_variables}()},
\code{\link{brapi_get_vendor_orders_orderId_plates}()},
\code{\link{brapi_get_vendor_orders_orderId_results}()},
\code{\link{brapi_get_vendor_orders_orderId_status}()},
\code{\link{brapi_get_vendor_orders}()},
\code{\link{brapi_get_vendor_plates_submissionId}()},
\code{\link{brapi_get_vendor_specifications}()},
\code{\link{brapi_post_allelematrices_search}()},
\code{\link{brapi_post_images}()},
\code{\link{brapi_post_lists_listDbId_items}()},
\code{\link{brapi_post_lists}()},
\code{\link{brapi_post_methods}()},
\code{\link{brapi_post_people}()},
\code{\link{brapi_post_phenotypes}()},
\code{\link{brapi_post_scales}()},
\code{\link{brapi_post_search_germplasm}()},
\code{\link{brapi_post_search_images}()},
\code{\link{brapi_post_search_markers}()},
\code{\link{brapi_post_search_observationtables}()},
\code{\link{brapi_post_search_observationunits}()},
\code{\link{brapi_post_search_programs}()},
\code{\link{brapi_post_search_samples}()},
\code{\link{brapi_post_search_studies}()},
\code{\link{brapi_post_search_variables}()},
\code{\link{brapi_post_studies_studyDbId_table}()},
\code{\link{brapi_post_traits}()},
\code{\link{brapi_post_vendor_orders}()},
\code{\link{brapi_post_vendor_plates}()},
\code{\link{brapi_put_images_imageDbId_imagecontent}()},
\code{\link{brapi_put_images_imageDbId}()},
\code{\link{brapi_put_lists_listDbId}()},
\code{\link{brapi_put_methods_methodDbId}()},
\code{\link{brapi_put_people_personDbId}()},
\code{\link{brapi_put_samples}()},
\code{\link{brapi_put_scales_scaleDbId}()},
\code{\link{brapi_put_studies_studyDbId_layouts}()},
\code{\link{brapi_put_studies_studyDbId_observations}()}

Other Observation Variables: 
\code{\link{brapi_get_methods_methodDbId}()},
\code{\link{brapi_get_methods}()},
\code{\link{brapi_get_ontologies}()},
\code{\link{brapi_get_scales_scaleDbId}()},
\code{\link{brapi_get_scales}()},
\code{\link{brapi_get_search_variables_searchResultsDbId}()},
\code{\link{brapi_get_studies_studyDbId_observationvariables}()},
\code{\link{brapi_get_traits_traitDbId}()},
\code{\link{brapi_get_traits}()},
\code{\link{brapi_get_variables_observationVariableDbId}()},
\code{\link{brapi_get_variables}()},
\code{\link{brapi_post_methods}()},
\code{\link{brapi_post_scales}()},
\code{\link{brapi_post_search_variables}()},
\code{\link{brapi_post_traits}()},
\code{\link{brapi_put_methods_methodDbId}()},
\code{\link{brapi_put_scales_scaleDbId}()}
}
\author{
brapir generator package
}
\concept{Observation Variables}
\concept{brapi_1.3}
