% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/brapi_post_search_images.R
\name{brapi_post_search_images}
\alias{brapi_post_search_images}
\title{post /search/images}
\usage{
brapi_post_search_images(
  con = NULL,
  descriptiveOntologyTerms = "",
  imageFileNames = "",
  imageFileSizeMax = as.integer(NA),
  imageFileSizeMin = as.integer(NA),
  imageHeightMax = as.integer(NA),
  imageHeightMin = as.integer(NA),
  imageLocation = list(),
  imageNames = "",
  imageTimeStampRangeEnd = "",
  imageTimeStampRangeStart = "",
  imageWidthMax = as.integer(NA),
  imageWidthMin = as.integer(NA),
  mimeTypes = "",
  observationDbIds = "",
  observationUnitDbIds = ""
)
}
\arguments{
\item{con}{list; required: TRUE; BrAPI connection object}

\item{descriptiveOntologyTerms}{vector of type character; required: FALSE; A list of terms to formally describe the image to search for. Each item could be a simple Tag, an Ontology reference Id, or a full ontology URL.; default: "", when using multiple values supply as c("value1", "value2").}

\item{imageFileNames}{vector of type character; required: FALSE; Image file names to search for.; default: "", when using multiple values supply as c("value1", "value2").}

\item{imageFileSizeMax}{integer; required: FALSE; A maximum image file size to search for.}

\item{imageFileSizeMin}{integer; required: FALSE; A minimum image file size to search for.}

\item{imageHeightMax}{integer; required: FALSE; A maximum image height to search for.}

\item{imageHeightMin}{integer; required: FALSE; A minimum image height to search for.}

\item{imageLocation}{list; required: FALSE; One geometry as defined by GeoJSON (RFC 7946). All coordinates are decimal values on the WGS84 geographic coordinate reference system.}

\item{imageNames}{vector of type character; required: FALSE; Human readable names to search for.; default: "", when using multiple values supply as c("value1", "value2").}

\item{imageTimeStampRangeEnd}{character; required: FALSE; The latest timestamp to search for.; default: "".}

\item{imageTimeStampRangeStart}{character; required: FALSE; The earliest timestamp to search for.; default: "".}

\item{imageWidthMax}{integer; required: FALSE; A maximum image width to search for.}

\item{imageWidthMin}{integer; required: FALSE; A minimum image width to search for.}

\item{mimeTypes}{vector of type character; required: FALSE; A set of image file types to search for.; default: "", when using multiple values supply as c("value1", "value2").}

\item{observationDbIds}{vector of type character; required: FALSE; A list of observation Ids this image is associated with to search for; default: "", when using multiple values supply as c("value1", "value2").}

\item{observationUnitDbIds}{vector of type character; required: FALSE; A set of observation unit identifiers to search for.; default: "", when using multiple values supply as c("value1", "value2").}
}
\value{
data.frame
}
\description{
Submit a search request for Images
}
\details{
Get filtered set of image meta data
\itemize{
\item \code{imageLocation} argument should be provided as a list. The easiest way in R to construct such a list is to use the \strong{geojsonR} package. Below in the example section examples are provided to create an \code{imageLocation} object for a point and a polygon.
\item \code{descriptiveOntologyTerm} can be thought of as Tags for the image. These could be simple descriptive words, or ontology references, or full ontology URI's.
}
}
\examples{
\dontrun{

# Create a connection object
con <- brapi_db()$testserver

library(geojsonR)
# Create on imageLocation example objects
#' # Point example for Ancient Human Head at Cypress County, Canada
init <- TO_GeoJson$new()
imageLocation <- list()
pointData <- c(-110.11301, 50.010082) # provide as c(longitude, latitude. altitude)
imageLocation[["geometry"]] <- init$Point(data = pointData, stringify = FALSE)
imageLocation$type <- "Feature"

# Polygon example with exterior and an interior ring
# The first list in polygonData creates the exterior ring, whereas
# following lists create interior rings.
init <- TO_GeoJson$new()
# Polygon data points are provided as c(longitude, latitude)
polygonData <- list(list(c(-76.476949, 42.447274), # exterior ring (rectangle)
                         c(-76.474429, 42.447258),
                         c(-76.474428, 42.446193),
                         c(-76.476961, 42.446211),
                         c(-76.476949, 42.447274)),
                    list(c(-76.476733, 42.446916), # interior ring (triangle)
                         c(-76.475810, 42.447154),
                         c(-76.476306, 42.446281),
                         c(-76.476733, 42.446916)))
imageLocation2 <- list()
imageLocation2[["geometry"]] <- init$Polygon(data = polygonData, stringify = FALSE)
imageLocation2$type <- "Feature"

# Make post /search/images call
# For the Point location example
searchResultsDbId <- brapi_post_search_images(con = con, imageLocation = imageLocation)
searchResultsDbId <- as.character(searchResultsDbId)

# For the Polygon location example
searchResultsDbId <- brapi_post_search_images(con = con, imageLocation = imageLocation2)
searchResultsDbId <- as.character(searchResultsDbId)
}

}
\references{
\href{https://app.swaggerhub.com/apis/PlantBreedingAPI/BrAPI/1.3#/Images/post_search_images }{BrAPI SwaggerHub}
}
\seealso{
Other brapi_1.3: 
\code{\link{brapi_get_allelematrices_search}()},
\code{\link{brapi_get_allelematrices}()},
\code{\link{brapi_get_attributes_categories}()},
\code{\link{brapi_get_attributes}()},
\code{\link{brapi_get_breedingmethods_breedingMethodDbId}()},
\code{\link{brapi_get_breedingmethods}()},
\code{\link{brapi_get_calls}()},
\code{\link{brapi_get_commoncropnames}()},
\code{\link{brapi_get_germplasm_germplasmDbId_attributes}()},
\code{\link{brapi_get_germplasm_germplasmDbId_markerprofiles}()},
\code{\link{brapi_get_germplasm_germplasmDbId_mcpd}()},
\code{\link{brapi_get_germplasm_germplasmDbId_pedigree}()},
\code{\link{brapi_get_germplasm_germplasmDbId_progeny}()},
\code{\link{brapi_get_germplasm_germplasmDbId}()},
\code{\link{brapi_get_germplasm}()},
\code{\link{brapi_get_images_imageDbId}()},
\code{\link{brapi_get_images}()},
\code{\link{brapi_get_lists_listDbId}()},
\code{\link{brapi_get_lists}()},
\code{\link{brapi_get_locations_locationDbId}()},
\code{\link{brapi_get_locations}()},
\code{\link{brapi_get_maps_mapDbId_positions_linkageGroupName}()},
\code{\link{brapi_get_maps_mapDbId_positions}()},
\code{\link{brapi_get_maps_mapDbId}()},
\code{\link{brapi_get_maps}()},
\code{\link{brapi_get_markerprofiles_markerProfileDbId}()},
\code{\link{brapi_get_markerprofiles}()},
\code{\link{brapi_get_markers_markerDbId}()},
\code{\link{brapi_get_markers}()},
\code{\link{brapi_get_methods_methodDbId}()},
\code{\link{brapi_get_methods}()},
\code{\link{brapi_get_observationlevels}()},
\code{\link{brapi_get_observationunits}()},
\code{\link{brapi_get_ontologies}()},
\code{\link{brapi_get_people_personDbId}()},
\code{\link{brapi_get_people}()},
\code{\link{brapi_get_programs}()},
\code{\link{brapi_get_samples_sampleDbId}()},
\code{\link{brapi_get_samples}()},
\code{\link{brapi_get_scales_scaleDbId}()},
\code{\link{brapi_get_scales}()},
\code{\link{brapi_get_search_germplasm_searchResultsDbId}()},
\code{\link{brapi_get_search_images_searchResultsDbId}()},
\code{\link{brapi_get_search_markers_searchResultsDbId}()},
\code{\link{brapi_get_search_observationtables_searchResultsDbId}()},
\code{\link{brapi_get_search_observationunits_searchResultsDbId}()},
\code{\link{brapi_get_search_programs_searchResultsDbId}()},
\code{\link{brapi_get_search_samples_searchResultsDbId}()},
\code{\link{brapi_get_search_studies_searchResultsDbId}()},
\code{\link{brapi_get_search_variables_searchResultsDbId}()},
\code{\link{brapi_get_seasons}()},
\code{\link{brapi_get_studies_studyDbId_germplasm}()},
\code{\link{brapi_get_studies_studyDbId_layouts}()},
\code{\link{brapi_get_studies_studyDbId_observations}()},
\code{\link{brapi_get_studies_studyDbId_observationunits}()},
\code{\link{brapi_get_studies_studyDbId_observationvariables}()},
\code{\link{brapi_get_studies_studyDbId_table}()},
\code{\link{brapi_get_studies_studyDbId}()},
\code{\link{brapi_get_studies}()},
\code{\link{brapi_get_studytypes}()},
\code{\link{brapi_get_traits_traitDbId}()},
\code{\link{brapi_get_traits}()},
\code{\link{brapi_get_trials_trialDbId}()},
\code{\link{brapi_get_trials}()},
\code{\link{brapi_get_variables_observationVariableDbId}()},
\code{\link{brapi_get_variables}()},
\code{\link{brapi_get_vendor_orders_orderId_plates}()},
\code{\link{brapi_get_vendor_orders_orderId_results}()},
\code{\link{brapi_get_vendor_orders_orderId_status}()},
\code{\link{brapi_get_vendor_orders}()},
\code{\link{brapi_get_vendor_plates_submissionId}()},
\code{\link{brapi_get_vendor_specifications}()},
\code{\link{brapi_post_allelematrices_search}()},
\code{\link{brapi_post_search_germplasm}()},
\code{\link{brapi_post_search_markers}()},
\code{\link{brapi_post_search_observationtables}()},
\code{\link{brapi_post_search_observationunits}()},
\code{\link{brapi_post_search_programs}()},
\code{\link{brapi_post_search_samples}()},
\code{\link{brapi_post_search_studies}()},
\code{\link{brapi_post_search_variables}()}

Other Images: 
\code{\link{brapi_get_images_imageDbId}()},
\code{\link{brapi_get_images}()},
\code{\link{brapi_get_search_images_searchResultsDbId}()}

Other Search Services: 
\code{\link{brapi_get_search_germplasm_searchResultsDbId}()},
\code{\link{brapi_get_search_images_searchResultsDbId}()},
\code{\link{brapi_get_search_markers_searchResultsDbId}()},
\code{\link{brapi_get_search_observationtables_searchResultsDbId}()},
\code{\link{brapi_get_search_observationunits_searchResultsDbId}()},
\code{\link{brapi_get_search_programs_searchResultsDbId}()},
\code{\link{brapi_get_search_samples_searchResultsDbId}()},
\code{\link{brapi_get_search_studies_searchResultsDbId}()},
\code{\link{brapi_get_search_variables_searchResultsDbId}()},
\code{\link{brapi_post_search_germplasm}()},
\code{\link{brapi_post_search_markers}()},
\code{\link{brapi_post_search_observationtables}()},
\code{\link{brapi_post_search_observationunits}()},
\code{\link{brapi_post_search_programs}()},
\code{\link{brapi_post_search_samples}()},
\code{\link{brapi_post_search_studies}()},
\code{\link{brapi_post_search_variables}()}
}
\author{
brapir generator package
}
\concept{Images}
\concept{Search Services}
\concept{brapi_1.3}
